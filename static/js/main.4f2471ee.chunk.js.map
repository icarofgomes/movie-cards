{"version":3,"sources":["components/Loading.jsx","components/MovieForm.jsx","components/MovieCard.jsx","services/movieData.js","services/movieAPI.js","pages/EditMovie.jsx","pages/MovieDetails.jsx","pages/MovieList.jsx","pages/NewMovie.jsx","pages/NotFound.jsx","components/Router.jsx","components/Header.jsx","components/InputField.jsx","App.js","serviceWorker.js","index.js"],"names":["Loading","className","fill","viewBox","xmlns","clipRule","d","fillRule","INITIAL_STATE","title","subtitle","imagePath","storyline","genre","rating","MovieForm","movie","onSubmit","useState","movieInfo","setMovieInfo","handleSubmit","updateMovie","target","name","value","htmlFor","id","onChange","rows","placeholder","type","step","min","max","onClick","defaultProps","MovieCard","src","alt","to","movies","bookmarked","localStorage","setItem","JSON","stringify","data","readMovies","parse","getItem","saveMovies","SUCCESS_STATUS","simulateRequest","response","callback","setTimeout","getMovie","movieId","find","mov","parseInt","Promise","resolve","updatedMovie","map","createMovie","movieData","nextId","length","newMovie","deleteMovie","filter","status","EditMovie","match","params","shouldRedirect","setShouldRedirect","setMovie","useEffect","fetchDetails","a","movieAPI","movieDetails","MovieDetails","deleteFunction","SwiperCore","use","Navigation","MovieList","setMovies","fetchList","movieList","i","navigation","window","screen","width","spaceBetween","slidesPerView","NewMovie","NotFound","Router","exact","path","component","render","props","Header","InputField","App","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f2471ee.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Loading () {\n  return (\n    <div className=\"flex justify-center my-36\">\n      <div className=\"flex justify-center items-center space-x-1 text-xl text-gray-400\">\n        <svg\n          fill='none'\n          className=\"w-24 h-24 animate-spin\"\n          viewBox=\"0 0 32 32\"\n          xmlns='http://www.w3.org/2000/svg'\n        >\n          <path\n            clipRule='evenodd'\n            d='M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z'\n            fill='currentColor'\n            fillRule='evenodd'\n          />\n        </svg>\n        <div>Loading ...</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '.';\n\nconst INITIAL_STATE = {\n  title: '',\n  subtitle: '',\n  imagePath: '',\n  storyline: '',\n  genre: '',\n  rating: 0,\n}\n\nfunction MovieForm ({ movie = INITIAL_STATE, onSubmit}) {\n  const [\n    movieInfo,\n    setMovieInfo,\n  ] = useState(movie);\n\n  const handleSubmit = () => {\n    onSubmit(movieInfo);\n  }\n\n  const updateMovie = ({ target: { name, value} }) => {\n    setMovieInfo({...movieInfo, [name]: value});\n  }\n\n  const renderGenreSelection = () => {\n    return (\n      <div className=\"p-2 flex flex-col bg-white\">\n        <div className=\"flex flex-col space-y-2\">\n          <label\n            className=\"text-gray-700 select-none font-medium\" \n            htmlFor=\"movie_genre\"\n          >\n            <div className=\"mr-2 text-green-600 font-bold text-lg\">Genre</div>\n            <select\n              className=\"px-4 py-2 rounded-lg border border-gray-300 focus:outline-none\n                focus:ring-2 focus:ring-green-600 md:p-0\"\n              id=\"movie_genre\"\n              value={ movieInfo.genre }\n              onChange={ updateMovie }\n              name=\"genre\"\n            >\n              <option value=\"action\">Ação</option>\n              <option value=\"comedy\">Comédia</option>\n              <option value=\"thriller\">Suspense</option>\n              <option value=\"fantasy\">Fantasia</option>\n            </select>\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n  const renderRatingInput = () => {\n    return (\n      <div className=\"p-2 flex flex-col bg-white\">\n        <div className=\"flex flex-col space-y-2\">\n          <label\n            className=\"text-gray-700 select-none font-medium\"\n            htmlFor=\"movie_rating\">\n            <div className=\"mr-2 text-green-600 font-bold text-lg\">Rating</div>\n            <input\n              className=\"px-4 py-2 rounded-lg border border-gray-300 focus:outline-none\n                focus:ring-2 focus:ring-green-600 md:p-0\"\n              placeholder=\"Dê a avaliação do filme\"\n              id=\"movie_rating\"\n              type=\"number\"\n              step={ 0.1 }\n              min={ 0 }\n              max={ 5 }\n              value={ movieInfo.rating }\n              name=\"rating\"\n              onChange={ updateMovie }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n  const renderStorylineInput = () => {\n    return (\n      <div className=\"p-2 flex flex-col bg-white\">\n        <div className=\"flex flex-col space-y-2\">\n          <label\n            className=\"text-gray-700 select-none font-medium\"\n            htmlFor=\"movie_storyline\">\n            <div className=\"mr-2 text-green-600 font-bold text-lg\">Storyline</div>\n            <textarea\n              className=\"px-4 py-2 rounded-lg border border-gray-300 focus:outline-none\n                focus:ring-2 focus:ring-green-600 w-full md:p-0\"\n              id=\"movie_storyline\"\n              value={ movieInfo.storyline }\n              name=\"storyline\"\n              onChange={ updateMovie }\n              rows=\"3\"\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n   const renderSubmitButton = () => {\n    return (\n      <button\n        className=\"mt-4 px-1.5 text-xl w-full text-white bg-green-600 py-1.5\n          rounded-xl shadow-lg text-center font-bold\"\n        type=\"button\"\n        onClick={ handleSubmit }\n      >\n        Submit\n      </button>\n    );\n}\n  return (\n    <div className=\"text-black bg-white w-5/6 mx-auto mt-5 rounded-lg p-2 md:w-3/6\">\n      <form>\n        <InputField\n          name=\"title\"\n          updateMovie={ updateMovie }\n          value={ movieInfo.title }\n        />\n        <InputField\n          name=\"subtitle\"\n          updateMovie={ updateMovie }\n          value={ movieInfo.subtitle }\n        />\n        <InputField\n          name=\"imagePath\"\n          updateMovie={ updateMovie }\n          value={ movieInfo.imagePath }\n        />\n        { renderStorylineInput() }\n        { renderGenreSelection() }\n        { renderRatingInput() }\n        { renderSubmitButton() }\n      </form>\n    </div>\n  );\n}\n\nMovieForm.defaultProps = {\n  movie: INITIAL_STATE,\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n    imagePath: PropTypes.string.isRequired,\n    storyline: PropTypes.string.isRequired,\n    genre: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n  }),\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MovieCard ({ movie }) {\n  const { title, id, rating, imagePath } = movie;\n  return (\n    <div\n      className=\"p-4 md:p-2\"\n      data-testid=\"movie-card\"\n    >\n      <div className=\"bg-white p-4 rounded-xl shadow-lg mx-auto\">\n        <div className=\"flex justify-between pb-4\">\n          <h3 className=\"text-xl font-bold text-green-600\">{ title }</h3>\n          <div className=\"flex items-center justify-end\">\n            <svg\n              className=\"w-6 h-6 text-gray-900 fill-current\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19\n                8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z\"/>\n            </svg>\n            <div className=\"text-green-600 font-bold text-xl ml-1\">{ rating }</div>\n          </div>\n        </div>\n        <div className=\"h-96 p-2\">\n          <img className=\"max-h-96 md:max-h-80 mx-auto rounded-xl\" src={ imagePath } alt={ title } />\n        </div>\n        <div className=\"my-1\">\n          <div className=\"mt-4 text-xl w-full text-white bg-green-600 py-1.5\n            rounded-xl shadow-lg text-center font-bold\">\n              <Link to={ `/movies/${id}` }>VER DETALHES</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    storyline: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","// https://g.co/kgs/uM7Nbx - Star  Wars\n// https://g.co/kgs/Xi3P3u - Clockwork Orange\n// https://g.co/kgs/oxkrQX - Ratatouille\n// https://g.co/kgs/FrFv8u - The Lord of the Rings\n// https://g.co/kgs/rYHEU4 - Forrest Gump\n\nconst movies = [\n  {\n    id: 1,\n    title: 'Star Wars',\n    subtitle: 'Empire Strikes Back',\n    storyline: \"Yoda treina Luke Skywalker para ser um cavaleiro Jedi. Han Solo corteja a Princesa Leia enquanto Darth Vader retorna para combater as forças rebeldes que tentam salvar a galáxia.\",\n    rating: 4.5,\n    imagePath: 'https://live.staticflickr.com/65535/48207320557_01bf42f0f3_b.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    id: 2,\n    title: 'A Clockwork Orange',\n    subtitle: 'Laranja Mecânica',\n    storyline: 'O jovem Alex passa as noites com uma gangue de amigos briguentos. Depois que é preso, se submete a uma técnica de modificação de comportamento para poder ganhar sua liberdade.',\n    rating: 4.5,\n    imagePath: 'https://live.staticflickr.com/2761/4062111702_98da5213b1_b.jpg',\n    bookmarked: false,\n    genre: 'action',\n  },\n  {\n    id: 3,\n    title: 'Ratatouille',\n    subtitle: 'Ratatouille',\n    storyline: 'Remy reside em Paris e possui um sofisticado paladar. Seu sonho é se tornar um chef de cozinha e desfrutar as diversas obras da arte culinária. O único problema é que ele é um rato. Quando se acha dentro de um dos restaurantes mais finos de Paris, Remy decide transformar seu sonho em realidade.',\n    rating: 5,\n    imagePath: 'https://live.staticflickr.com/1248/1051508675_5ffd3d1093.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    id: 4,\n    title: 'The Lord of the Rings',\n    subtitle: 'The Fellowship of the Ring',\n    storyline: \"Em uma terra fantástica e única, um hobbit recebe de presente de seu tio um anel mágico e maligno que precisa ser destruído antes que caia nas mãos do mal. Para isso, o hobbit Frodo tem um caminho árduo pela frente, onde encontra perigo, medo e seres bizarros. Ao seu lado para o cumprimento desta jornada, ele aos poucos pode contar com outros hobbits, um elfo, um anão, dois humanos e um mago, totalizando nove seres que formam a Sociedade do Anel.\",\n    rating: 4.5,\n    imagePath: 'https://live.staticflickr.com/8144/7559312898_027e98481e_b.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n  {\n    id: 5,\n    title: 'Forrest Gump',\n    subtitle: 'O Contador de Histórias',\n    storyline: 'Mesmo com o raciocínio lento, Forrest Gump nunca se sentiu desfavorecido. Graças ao apoio da mãe, ele teve uma vida normal. Seja no campo de futebol como um astro do esporte, lutando no Vietnã ou como capitão de um barco de pesca de camarão, Forrest inspira a todos com seu otimismo. Mas a pessoa que Forrest mais ama pode ser a mais difícil de salvar: seu amor de infância, a doce e perturbada Jenny.',\n    rating: 4.2,\n    imagePath: 'https://live.staticflickr.com/721/21505208734_9b94ae2e24_b.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import data from './movieData';\n\nlocalStorage.setItem('movies', JSON.stringify(data));\n\nconst readMovies = () => JSON.parse(localStorage.getItem('movies'));\nconst saveMovies = (movies) => localStorage.setItem('movies', JSON.stringify(movies));\n\nconst TIMEOUT = 2000;\nconst SUCCESS_STATUS = 'OK';\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getMovies = () => (\n  new Promise((resolve) => {\n    const movies = readMovies();\n    simulateRequest(movies)(resolve);\n  })\n);\n\nexport const getMovie = (movieId) => {\n  const movie = readMovies().find((mov) => mov.id === parseInt(movieId, 10));\n  return new Promise((resolve) => {\n    simulateRequest(movie)(resolve);\n  });\n};\n\nexport const updateMovie = (updatedMovie) => (\n  new Promise((resolve) => {\n    const movies = readMovies().map((movie) => {\n      if (movie.id === parseInt(updatedMovie.id, 10)) {\n        return { ...movie, ...updatedMovie };\n      }\n      return movie;\n    });\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const createMovie = (movieData) => (\n  new Promise((resolve) => {\n    let movies = readMovies();\n    const nextId = movies[movies.length - 1].id + 1;\n    const newMovie = { ...movieData, id: nextId };\n    movies = [...movies, newMovie];\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const deleteMovie = (movieId) => {\n  let movies = readMovies();\n  movies = movies.filter((movie) => movie.id !== parseInt(movieId, 10));\n  saveMovies(movies);\n\n  return new Promise((resolve) => {\n    simulateRequest({ status: SUCCESS_STATUS })(resolve);\n  });\n};\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nfunction EditMovie ({ match: { params: { id } } }) {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    fetchDetails();\n  })\n\n  const handleSubmit = async(updatedMovie) => {\n    await movieAPI.updateMovie(updatedMovie);\n    setMovie(updatedMovie);\n    setShouldRedirect(true);\n  }\n\n  const fetchDetails = async () => {\n    const movieDetails = await movieAPI.getMovie(id);\n    setMovie(movieDetails);\n  }\n\n  if (shouldRedirect) return <Redirect to=\"/movie-cards\" />;\n\n  if (movie === '') return <Loading />;\n\n  return (\n    <div data-testid=\"edit-movie\">\n      <MovieForm movie={ movie } onSubmit={ handleSubmit } />\n    </div>\n  );\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default EditMovie;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nfunction MovieDetails ({ match: { params: { id } } }) {\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      const movieDetails = await movieAPI.getMovie(id);\n      setMovie(movieDetails);\n    }\n\n    fetchDetails();\n  })\n\n  const deleteFunction = async () => {\n    await movieAPI.deleteMovie(id);\n  }\n\n  const { title, storyline, imagePath, genre, rating, subtitle } = movie;\n  if (movie === '') return <Loading />;\n\n  return (\n    <div className=\"bg-gray-800 py-2\">\n      <div\n        className=\"flex flex-col bg-white w-11/12 mx-auto rounded-xl text-black p-4\"\n        data-testid=\"movie-details\"\n      >\n        <h1 className=\"text-green-600 font-bold text-xl mb-2 mx-auto\">{ title }</h1>\n        <div className=\"md:flex\">\n          <img className=\"max-h-80 rounded mx-auto mb-2\"alt=\"Movie Cover\" src={ imagePath }/>\n          <div className=\"md:p-4 md:flex md:flex-col md:justify-center\">\n            <p className=\"text-lg md:my-2\">\n              <span className=\"font-bold text-green-600 mr-1\">Subtitle:</span>\n                { subtitle }\n              </p>\n            <p className=\"text-lg md:my-2\">\n              <span className=\"text-green-600 font-bold mr-1\">Storyline:</span>\n              { storyline }\n            </p>\n            <p className=\"text-lg md:my-2\">\n              <span className=\"text-green-600 font-bold mr-1\">Genre:</span>\n              { genre }\n            </p>\n            <p className=\"text-lg md:my-2\">\n              <span className=\"text-green-600 font-bold mr-1\">Rating:</span>\n              {rating}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex justify-between md:justify-evenly\">\n          <Link to=\"/movie-cards\">\n            <div className=\"mt-4 px-1.5 text-xl w-full text-white bg-green-600 py-1.5\n              rounded-xl shadow-lg text-center font-bold\">\n              VOLTAR\n            </div>\n          </Link>\n          <Link to={ `${id}/edit` }>\n            <div className=\"mt-4 px-1.5 text-xl w-full text-white bg-green-600 py-1.5\n              rounded-xl shadow-lg text-center font-bold\">\n              EDITAR\n            </div>\n          </Link>\n          <Link to=\"/movie-cards\" onClick={ deleteFunction }>\n            <div className=\"mt-4 px-1.5 text-xl w-full text-white bg-green-600 py-1.5\n              rounded-xl shadow-lg text-center font-bold\">\n              DELETAR\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default MovieDetails;\n","import { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { Loading } from '../components';\nimport MovieCard from '../components/MovieCard';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport * as movieAPI from '../services/movieAPI';\n\nSwiperCore.use([Navigation]);\n\nfunction MovieList () {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchList();\n  })\n\n  const fetchList = async () => {\n    const movieList = await movieAPI.getMovies();\n    setMovies(movieList);\n  }\n\n  const movieList = movies.map(\n    (movie, i) => (\n      <SwiperSlide key={ i }>\n        <MovieCard movie={ movie }/>\n      </SwiperSlide>\n      )\n  );\n\n  if (movieList.length === 0) return <Loading />;\n\n  return (\n    <div\n      className=\"pb-2\"\n      data-testid=\"movie-list\">\n      <div className=\"h-5/6\">\n        <Swiper\n          navigation={ window.screen.width > 768 ? true : false }\n          spaceBetween={50}\n          slidesPerView={ window.screen.width > 768 ? 3 : 1 }\n        >\n          { movieList }\n        </Swiper>\n      </div>\n      <Link to=\"/movies/new\">\n        <div className=\"mx-auto text-xl w-2/3 text-white bg-blue-600 py-1.5\n          rounded-xl shadow-lg text-center font-bold md:w-2/6\">\n          ADICIONAR CARTÃO\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default MovieList;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport MovieForm from '../components/MovieForm';\nimport * as movieAPI from '../services/movieAPI';\n\nfunction NewMovie () {\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  const handleSubmit = async(newMovie) => {\n    await movieAPI.createMovie(newMovie);\n    setShouldRedirect(true);\n  }\n\n  if (shouldRedirect) return <Redirect to=\"/movie-cards\" />;\n\n  return (\n    <div data-testid=\"new-movie\">\n      <MovieForm onSubmit={ handleSubmit } />\n    </div>\n  );\n}\n\nexport default NewMovie;\n","import React from 'react';\n\nfunction NotFound () {\n  return <div data-testid=\"404-error\">Página não encontrada</div>;\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { MovieList, MovieDetails, NewMovie, EditMovie, NotFound} from '../pages';\n\nfunction Router () {\n  return (\n    <Switch>\n    <Route exact path=\"/movies/new\" component={ NewMovie } />\n    <Route\n      exact\n      path=\"/movies/:id/edit\"\n      render={ (props) => <EditMovie { ...props } /> }\n    />\n    <Route exact path=\"/movie-cards\" component={ MovieList } />\n    <Route\n      exact\n      path=\"/movies/:id\"\n      render={ (props) => <MovieDetails { ...props } /> }\n    />\n    <Route component={ NotFound } />\n  </Switch>\n  )\n}\n\nexport default Router;\n","import React from 'react';\n\nfunction Header () {\n  return (\n    <header>\n      <h1 className=\"text-center text-3xl font-bold py-6 bg-green-600\">Movie Cards Library</h1>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction InputField ({ name, value, updateMovie }) {\n  return(\n    <div className=\"p-2 flex flex-col bg-white\">\n      <div className=\"flex flex-col space-y-2\">\n        <label\n          className=\"text-gray-700 select-none font-medium\"\n          htmlFor={`movie-${name}`}>\n          <div className=\"capitalize mr-2 text-green-600 font-bold text-lg\">{ name }</div>\n          <input\n            className=\"py-2 rounded-lg border border-gray-300 focus:outline-none\n              focus:ring-2 focus:ring-green-600 md:py-0 md:w-full\"\n            placeholder={`Insira o ${ name }`}\n            id={`movie-${ name }`}\n            type=\"text\"\n            name={ name }\n            value={ value }\n            onChange={ updateMovie }\n          />\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Router, Header } from './components';\n\nfunction App() {\n  return (\n    <div className=\"bg-gray-800 text-white h-screen md:pb-4\">\n      <Header />\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}