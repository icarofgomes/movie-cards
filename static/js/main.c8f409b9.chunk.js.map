{"version":3,"sources":["components/Loading.jsx","components/MovieForm.jsx","components/MovieCard.jsx","services/movieData.js","services/movieAPI.js","pages/EditMovie.jsx","pages/MovieDetails.jsx","pages/MovieList.jsx","pages/NewMovie.jsx","pages/NotFound.jsx","components/Router.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["Loading","Component","MovieForm","props","state","movie","handleSubmit","bind","onSubmit","this","field","newValue","setState","title","htmlFor","placeholder","id","type","className","value","onChange","event","updateMovie","target","subtitle","imagePath","storyline","genre","rating","step","min","max","onClick","renderTitleInput","renderSubtitleInput","renderImagePathInput","renderStorylineInput","renderGenreSelection","renderRatingInput","renderSubmitButton","React","MovieCard","console","log","window","screen","width","src","alt","to","movies","bookmarked","localStorage","setItem","JSON","stringify","data","readMovies","parse","getItem","saveMovies","SUCCESS_STATUS","simulateRequest","response","callback","setTimeout","getMovie","movieId","find","mov","parseInt","Promise","resolve","updatedMovie","map","createMovie","movieData","nextId","length","newMovie","deleteMovie","filter","status","EditMovie","fetchDetails","a","match","params","movieAPI","movieDetails","shouldRedirect","MovieDetails","deleteFunction","MovieList","fetchList","movieList","spaceBetween","slidesPerView","onSwiper","swiper","onSlideChange","NewMovie","NotFound","Router","exact","path","component","render","Header","App","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8f409b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>Carregando...</div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  renderTitleInput() {\n    const { title } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_title\">\n          <input\n            placeholder=\"Insira o título\"\n            id=\"movie_title\"\n            type=\"text\"\n            className=\"validate\"\n            value={ title }\n            onChange={ (event) => this.updateMovie('title', event.target.value) }\n          />\n          Título\n        </label>\n      </div>\n    );\n  }\n\n  renderSubtitleInput() {\n    const { subtitle } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_subtitle\">\n          <input\n            placeholder=\"Insira o subtítulo\"\n            id=\"movie_subtitle\"\n            type=\"text\"\n            value={ subtitle }\n            onChange={ (event) => this.updateMovie('subtitle', event.target.value) }\n          />\n          Subtítulo\n        </label>\n      </div>\n    );\n  }\n\n  renderImagePathInput() {\n    const { imagePath } = this.state;\n\n    return (\n      <div className=\"row\">\n        <label htmlFor=\"movie_image\">\n          <input\n            placeholder=\"Insira o caminho da imagem\"\n            id=\"movie_image\"\n            type=\"text\"\n            value={ imagePath }\n            onChange={ (event) => this.updateMovie('imagePath', event.target.value) }\n          />\n          Imagem\n        </label>\n      </div>\n    );\n  }\n\n  renderStorylineInput() {\n    const { storyline } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_storyline\">\n          <textarea\n            id=\"movie_storyline\"\n            value={ storyline }\n            onChange={ (event) => this.updateMovie('storyline', event.target.value) }\n          />\n          Sinopse\n        </label>\n      </div>\n    );\n  }\n\n  renderGenreSelection() {\n    const { genre } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"movie_genre\">\n          Gênero\n          <select\n            id=\"movie_genre\"\n            value={ genre }\n            onChange={ (event) => this.updateMovie('genre', event.target.value) }\n          >\n            <option value=\"action\">Ação</option>\n            <option value=\"comedy\">Comédia</option>\n            <option value=\"thriller\">Suspense</option>\n            <option value=\"fantasy\">Fantasia</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n\n  renderRatingInput() {\n    const { rating } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"movie_rating\">\n          <input\n            placeholder=\"Dê a avaliação do filme\"\n            id=\"movie_rating\"\n            type=\"number\"\n            step={ 0.1 }\n            min={ 0 }\n            max={ 5 }\n            value={ rating }\n            onChange={ (event) => this.updateMovie('rating', event.target.value) }\n          />\n          Avaliação\n        </label>\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={ this.handleSubmit }\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          {this.renderTitleInput()}\n          {this.renderSubtitleInput()}\n          {this.renderImagePathInput()}\n          {this.renderStorylineInput()}\n          {this.renderGenreSelection()}\n          {this.renderRatingInput()}\n          {this.renderSubmitButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.objectOf(PropTypes.object).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieForm;\n","// https://larainfo.com/blogs/tailwind-css-carousel-slider-examples\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, storyline, id, imagePath } = movie;\n    console.log(window.screen.width)\n    return (\n      <div\n        className=\"p-4 md:p-2\"\n        data-testid=\"movie-card\"\n      >\n        <div className=\"bg-white px-4 pt-4 pb-2 rounded-xl shadow-lg mx-auto\">\n          <h3 className=\"mb-2 text-xl font-bold text-green-600\">{ title }</h3>\n          <div className=\"\">\n            <img className=\"max-h-80 md:max-h-48 mx-auto rounded-xl\" src={ imagePath } alt={ title } />\n          </div>\n          <div className=\"h-48 text-black text-sm md:pt-1 flex items-center\">\n          <p className=\"\">{ storyline }</p>\n          </div>\n          <div className=\"my-1\">\n            <div className=\"mt-4 text-xl w-full text-white bg-green-600 py-1.5\n              rounded-xl shadow-lg text-center font-bold\">\n                <Link to={ `/movies/${id}` }>VER DETALHES</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    storyline: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","// https://g.co/kgs/uM7Nbx - Star  Wars\n// https://g.co/kgs/Xi3P3u - Clockwork Orange\n// https://g.co/kgs/oxkrQX - Ratatouille\n// https://g.co/kgs/FrFv8u - The Lord of the Rings\n// https://g.co/kgs/rYHEU4 - Forrest Gump\n\nconst movies = [\n  {\n    id: 1,\n    title: 'Star Wars',\n    subtitle: 'Empire Strikes Back',\n    storyline: \"Yoda treina Luke Skywalker para ser um cavaleiro Jedi. Han Solo corteja a Princesa Leia enquanto Darth Vader retorna para combater as forças rebeldes que tentam salvar a galáxia.\",\n    rating: 4.5,\n    imagePath: 'https://live.staticflickr.com/65535/48207320557_01bf42f0f3_b.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    id: 2,\n    title: 'A Clockwork Orange',\n    subtitle: 'Laranja Mecânica',\n    storyline: 'O jovem Alex passa as noites com uma gangue de amigos briguentos. Depois que é preso, se submete a uma técnica de modificação de comportamento para poder ganhar sua liberdade.',\n    rating: 4.5,\n    imagePath: 'https://live.staticflickr.com/2761/4062111702_98da5213b1_b.jpg',\n    bookmarked: false,\n    genre: 'action',\n  },\n  {\n    id: 3,\n    title: 'Ratatouille',\n    subtitle: 'Ratatouille',\n    storyline: 'Remy reside em Paris e possui um sofisticado paladar. Seu sonho é se tornar um chef de cozinha e desfrutar as diversas obras da arte culinária. O único problema é que ele é um rato. Quando se acha dentro de um dos restaurantes mais finos de Paris, Remy decide transformar seu sonho em realidade.',\n    rating: 5,\n    imagePath: 'https://live.staticflickr.com/1248/1051508675_5ffd3d1093.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    id: 4,\n    title: 'The Lord of the Rings',\n    subtitle: 'The Fellowship of the Ring',\n    storyline: \"Em uma terra fantástica e única, um hobbit recebe de presente de seu tio um anel mágico e maligno que precisa ser destruído antes que caia nas mãos do mal. Para isso, o hobbit Frodo tem um caminho árduo pela frente, onde encontra perigo, medo e seres bizarros. Ao seu lado para o cumprimento desta jornada, ele aos poucos pode contar com outros hobbits, um elfo, um anão, dois humanos e um mago, totalizando nove seres que formam a Sociedade do Anel.\",\n    rating: 4.5,\n    imagePath: 'https://live.staticflickr.com/8144/7559312898_027e98481e_b.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n  {\n    id: 5,\n    title: 'Forrest Gump',\n    subtitle: 'O Contador de Histórias',\n    storyline: 'Mesmo com o raciocínio lento, Forrest Gump nunca se sentiu desfavorecido. Graças ao apoio da mãe, ele teve uma vida normal. Seja no campo de futebol como um astro do esporte, lutando no Vietnã ou como capitão de um barco de pesca de camarão, Forrest inspira a todos com seu otimismo. Mas a pessoa que Forrest mais ama pode ser a mais difícil de salvar: seu amor de infância, a doce e perturbada Jenny.',\n    rating: 4.2,\n    imagePath: 'https://live.staticflickr.com/721/21505208734_9b94ae2e24_b.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import data from './movieData';\n\nlocalStorage.setItem('movies', JSON.stringify(data));\n\nconst readMovies = () => JSON.parse(localStorage.getItem('movies'));\nconst saveMovies = (movies) => localStorage.setItem('movies', JSON.stringify(movies));\n\nconst TIMEOUT = 2000;\nconst SUCCESS_STATUS = 'OK';\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getMovies = () => (\n  new Promise((resolve) => {\n    const movies = readMovies();\n    simulateRequest(movies)(resolve);\n  })\n);\n\nexport const getMovie = (movieId) => {\n  const movie = readMovies().find((mov) => mov.id === parseInt(movieId, 10));\n  return new Promise((resolve) => {\n    simulateRequest(movie)(resolve);\n  });\n};\n\nexport const updateMovie = (updatedMovie) => (\n  new Promise((resolve) => {\n    const movies = readMovies().map((movie) => {\n      if (movie.id === parseInt(updatedMovie.id, 10)) {\n        return { ...movie, ...updatedMovie };\n      }\n      return movie;\n    });\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const createMovie = (movieData) => (\n  new Promise((resolve) => {\n    let movies = readMovies();\n    const nextId = movies[movies.length - 1].id + 1;\n    const newMovie = { ...movieData, id: nextId };\n    movies = [...movies, newMovie];\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const deleteMovie = (movieId) => {\n  let movies = readMovies();\n  movies = movies.filter((movie) => movie.id !== parseInt(movieId, 10));\n  saveMovies(movies);\n\n  return new Promise((resolve) => {\n    simulateRequest({ status: SUCCESS_STATUS })(resolve);\n  });\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: '',\n      shouldRedirect: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    this.fetchDetails();\n  }\n\n  async handleSubmit(updatedMovie) {\n    await movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      movie: updatedMovie,\n      shouldRedirect: true,\n    });\n  }\n\n  fetchDetails = async () => {\n    const { match: { params: { id } } } = this.props;\n    const movieDetails = await movieAPI.getMovie(id);\n    this.setState({\n      movie: movieDetails,\n    });\n  }\n\n  render() {\n    const { shouldRedirect, movie } = this.state;\n    if (shouldRedirect) return <Redirect to=\"/movie-cards\" />;\n\n    if (movie === '') return <Loading />;\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default EditMovie;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movie: '',\n    };\n  }\n\n  async componentDidMount() {\n    this.fetchDetails();\n  }\n\n  fetchDetails = async () => {\n    const { match: { params: { id } } } = this.props;\n    const movieDetails = await movieAPI.getMovie(id);\n    this.setState({\n      movie: movieDetails,\n    });\n  }\n\n  deleteFunction = async () => {\n    const { match: { params: { id } } } = this.props;\n    await movieAPI.deleteMovie(id);\n  }\n\n  render() {\n    // Change the condition to check the state\n    const { movie } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle, id } = movie;\n    if (!title) return <Loading />;\n\n    return (\n      <div data-testid=\"movie-details\">\n        <h1>{ `Title: ${title}` }</h1>\n        <img alt=\"Movie Cover\" src={ imagePath }/>\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n        <Link to=\"/movie-cards\">VOLTAR</Link>\n        <Link to={ `${id}/edit` }>EDITAR</Link>\n        <Link to=\"/movie-cards\" onClick={ this.deleteFunction }>DELETAR</Link>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nexport default MovieDetails;\n","import { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Loading } from '../components';\nimport MovieCard from '../components/MovieCard';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.min.css';\n\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchList();\n  }\n\n  fetchList = async () => {\n    const movieList = await movieAPI.getMovies();\n    this.setState({ movies: movieList });\n  }\n\n  render() {\n    const { movies } = this.state;\n    const movieList = movies.map(\n      (movie) => (\n        <SwiperSlide>\n          <MovieCard key={ movie.title } movie={ movie }/>\n        </SwiperSlide>\n        )\n    );\n\n    if (movieList.length === 0) return <Loading />;\n\n    return (\n      <div\n        className=\"pb-2\"\n        data-testid=\"movie-list\">\n        <div className=\"h-5/6\">\n          <Swiper\n            spaceBetween={50}\n            slidesPerView={ window.screen.width > 768 ? 3 : 1 }\n            onSwiper={(swiper) => console.log(swiper)}\n            onSlideChange={() => console.log('slide change')}\n          >\n            { movieList }\n          </Swiper>\n        </div>\n        <div className=\"mx-auto text-xl w-2/3 text-white bg-blue-600 py-1.5\n              rounded-xl shadow-lg text-center font-bold md:w-2/6\">\n          <Link to=\"/movies/new\">ADICIONAR CARTÃO</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport MovieForm from '../components/MovieForm';\nimport * as movieAPI from '../services/movieAPI';\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldRedirect: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(newMovie) {\n    await movieAPI.createMovie(newMovie);\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  render() {\n    const { shouldRedirect } = this.state;\n    if (shouldRedirect) return <Redirect to=\"/movie-cards\" />;\n    return (\n      <div data-testid=\"new-movie\">\n        <MovieForm onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\nexport default NewMovie;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return <div data-testid=\"404-error\">Página não encontrada</div>;\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { MovieList, MovieDetails, NewMovie, EditMovie, NotFound} from '../pages';\n\nclass Router extends Component {\n  render() {\n    return (\n      <Switch>\n      <Route exact path=\"/movies/new\" component={ NewMovie } />\n      <Route\n        exact\n        path=\"/movies/:id/edit\"\n        render={ (props) => <EditMovie { ...props } /> }\n      />\n      <Route exact path=\"/movie-cards\" component={ MovieList } />\n      <Route\n        exact\n        path=\"/movies/:id\"\n        render={ (props) => <MovieDetails { ...props } /> }\n      />\n      <Route component={ NotFound } />\n    </Switch>\n    )\n  }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1 className=\"text-center text-3xl font-bold py-6 bg-green-600\">Movie Cards Library</h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Router, Header } from './components';\n\nfunction App() {\n  return (\n    <div className=\"bg-gray-800 text-white\">\n      <Header />\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}